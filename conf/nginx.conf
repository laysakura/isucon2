# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  2;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;
daemon off;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    #gzip  on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    ##
    # Reverse Proxy Settings for App Server
    ##
    upstream isucon2-backend {
        server 127.0.0.1:5000 fail_timeout=0;
    }

    ##
    # HTTP Server Settings
    ##
    server {
        listen  80;
        client_max_body_size 4G;
        server_name ec2-54-238-162-6.ap-northeast-1.compute.amazonaws.com;

        keepalive_timeout 180;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://isucon2-backend;

            ## Cache
            set $do_not_cache 0;
            if ($request_method != GET) {
                set $do_not_cache 1;
            }
            if ($uri !~* ".(jpg|css|js|html)$") {
                set $do_not_cache 1;
            }
            proxy_no_cache $do_not_cache;
            proxy_cache_bypass $do_not_cache;
            proxy_cache cache_static_file;
            proxy_cache_key $scheme$host$uri$is_args$args;
            proxy_cache_valid 200 302 304 2h;
            proxy_cache_valid any 1m;
        }
    }

}
